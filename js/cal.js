// Generated by CoffeeScript 1.10.0
(function() {
  jQuery(function() {
    var $, cal_obj, countDecimals, factor_divider, has_dot, keys, numbers, op_obj, operator, operator_counter, operators;
    $ = jQuery;
    keys = $("#calculator span");
    cal_obj = {
      a: 0,
      b: 0
    };
    op_obj = {};
    operator = "";
    operator_counter = 0;
    has_dot = false;
    factor_divider = ['+', '-', '*', '/'];
    numbers = [];
    operators = [];
    countDecimals = function(value) {
      var decimal_number;
      if ((value % 1) !== 0) {
        decimal_number = value.toString().split(".")[1].length;
        if (decimal_number > 8) {
          decimal_number = 8;
        }
        return decimal_number;
      }
      return 0;
    };
    return $.each(keys, function(index, value) {
      return $(this).on("click", function() {
        var a_decimal, b_decimal, btn, decimal, display_val, factor, final_result, last_char, left_value, matches, num_regex, operator_regex, priority_operation, regExp, temp_index;
        btn = $(this);
        display_val = $("#display_val").text();
        if (btn.prop("id") === "clear") {
          $("#display_val").text("");
          cal_obj = {
            a: 0,
            b: 0
          };
          operator = "";
          has_dot = false;
          numbers = [];
          operators = [];
          return operator_counter = 0;
        } else {
          if (btn.prop("id") === "equal") {
            if (operator_counter >= 2) {
              if (display_val.indexOf("(") > -1 && display_val.indexOf(")") > -1) {
                regExp = /\(([^)]+)\)/;
                matches = regExp.exec(display_val);
                priority_operation = matches[0];
              } else {
                cal_obj = {};
                left_value = display_val;
                num_regex = /(\d+)/g;
                numbers = left_value.match(num_regex);
                operator_regex = /[^0-9\\.]+/g;
                operators = left_value.match(operator_regex);
                temp_index = 0;
                if (left_value.indexOf("+") > -1 || left_value.indexOf("-") > -1 || left_value.indexOf("/") > -1 || left_value.indexOf("*") > -1) {
                  if (($.inArray('*', operators) === -1 && $.inArray('/', operators) === -1) || ($.inArray('+', operators) === -1 && $.inArray('-', operators) === -1)) {
                    $.each(operators, function(index) {
                      var a, b, final_result, number_index, temp;
                      number_index = index + temp_index;
                      a = numbers[number_index];
                      b = numbers[number_index + 1];
                      if (operators[index] === "+") {
                        temp = (parseFloat(a) + parseFloat(b)).toFixed(0);
                      }
                      if (operators[index] === "-") {
                        temp = (parseFloat(a) - parseFloat(b)).toFixed(0);
                      }
                      if (operators[index] === "*") {
                        temp = (parseFloat(a) * parseFloat(b)).toFixed(0);
                      }
                      if (operators[index] === "/") {
                        temp = (parseFloat(a) / parseFloat(b)).toFixed(0);
                      }
                      if (numbers.length > 2) {
                        numbers.splice(0, 2);
                        numbers.unshift(temp);
                        temp_index -= 1;
                      } else {
                        final_result = temp;
                      }
                      return $("#display_val").text(final_result);
                    });
                  } else {
                    while (operators.length >= 1) {
                      console.log("looping");
                      $.each(operators, function(index) {
                        var a, b, final_result, temp;
                        a = numbers[index];
                        b = numbers[index + 1];
                        if (operators[index] === "*") {
                          temp = parseFloat(a) * parseFloat(b);
                          console.log(temp);
                        }
                        if (operators[index] === "/") {
                          temp = parseFloat(a) / parseFloat(b);
                        }
                        if (temp) {
                          numbers[index] = temp;
                          numbers.splice(index + 1, 1);
                        }
                        if (numbers.length === 1) {
                          final_result = numbers[0];
                          $("#display_val").text(final_result);
                        }
                        operators.splice(index, 1);
                        return temp_index -= 1;
                      });
                    }
                  }
                }
              }
            } else {
              cal_obj.b = $("#display_val").text().replace(cal_obj.a + operator, "");
              a_decimal = countDecimals(cal_obj.a);
              b_decimal = countDecimals(cal_obj.b);
              decimal = a_decimal > b_decimal ? a_decimal : b_decimal;
              if (operator === "+") {
                final_result = (parseFloat(cal_obj.a) + parseFloat(cal_obj.b)).toFixed(decimal);
              }
              if (operator === "-") {
                final_result = (parseFloat(cal_obj.a) - parseFloat(cal_obj.b)).toFixed(decimal);
              }
              if (operator === "*") {
                final_result = (parseFloat(cal_obj.a) * parseFloat(cal_obj.b)).toFixed(decimal);
              }
              if (operator === "/") {
                final_result = (parseFloat(cal_obj.a) / parseFloat(cal_obj.b)).toFixed(decimal);
              }
            }
            return $("#display_val").text(final_result);
          } else {
            last_char = display_val[display_val.length - 1];
            if (factor_divider.indexOf(last_char) > -1) {
              factor = display_val.substring(0, display_val.length - 1);
              if (factor.indexOf(".") > -1) {
                has_dot = false;
              }
            }
            if (btn.hasClass("operator")) {
              operator_counter += 1;
              cal_obj.a = display_val;
              operator = btn.text();
            }
            if (btn.prop("id") === "dot") {
              if (!has_dot) {
                display_val += btn.text();
                has_dot = true;
              }
            } else {
              if (!(last_char === "0" && btn.text() === "0" && display_val.length === 1)) {
                display_val += btn.text();
              }
            }
            return $("#display_val").text(display_val);
          }
        }
      });
    });
  });

}).call(this);
